{"version":3,"sources":["sites/join-game.js","cookie-manager.js","model/game.js","sites/join-room.js","context/color-context.js","sites/main.js","singleRPS/SingleRPS.js","singleRPS/rock.js","singleRPS/scissors.js","singleRPS/paper.js","App.js","reportWebVitals.js","index.js","connections/socket.js"],"names":["socket","require","JoinGame","props","gameid","userName","isHost","idData","gameId","emit","JoinGameRoom","useParams","style","textAlign","cookies","Cookies","port","process","PORT","url","URL","hubUrl","Game","state","host","choiceHost","choiceGuest","scoreHost","scoreGuest","winner","endOfGame","setWinner","console","log","alert","this","username","get","axios","post","game","result","stats","path","window","location","href","setState","on","choice","scorHost","Fragment","to","className","onClick","choose","bind","React","Component","GameWrapper","useState","setOpponentSocketId","opponentDidJoinTheGame","didJoinGame","opponentUserName","setUserName","gameSessionDoesNotExist","doesntExist","useEffect","statusUpdate","mySocketId","id","myUserName","socketId","data","display","marginTop","String","innerHeight","marginLeft","innerWidth","width","height","onFocus","event","target","select","value","type","readOnly","JoinRoom","didGetUserName","inputEmail","inputPassword","inputText","typingEmail","typedText","email","current","typingPassword","password","typingUserName","textArea","createRef","ref","onInput","disabled","length","passwordHash","sha1","then","response","set","catch","err","ColorContext","createContext","didRedirect","playerDidRedirect","playerDidNotRedirect","CreateNewGame","send","newGameRoomId","uuid","a","roomId","Main","color","useContext","SingleTicTacToe","lang","class","action","src","comp","Math","floor","random","computerChoose","out","App","setDidRedirect","useCallback","Provider","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","io","status"],"mappings":"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","file":"static/js/main.af98e78b.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nconst socket  = require('../connections/socket').socket;\r\n\r\n/**\r\n * 'Join game' is where we actually join the game room. \r\n */\r\n\r\n\r\nconst JoinGameRoom = (gameid, userName, isHost) => {\r\n\t/**\r\n\t * For this browser instance, we want \r\n\t * to join it to a gameRoom. For now\r\n\t * assume that the game room exists \r\n\t * on the backend. \r\n\t *  \r\n\t * \r\n\t * TODO: handle the case when the game room doesn't exist. \r\n\t */\r\n\tconst idData = {\r\n\t\tgameId : gameid,\r\n\t\tuserName : userName,\r\n\t\tisHost: isHost\r\n\t};\r\n\tsocket.emit(\"playerJoinGame\", idData);\r\n}\r\n\r\n\r\nconst JoinGame = (props) => {\r\n\t/**\r\n\t * Extract the 'gameId' from the URL. \r\n\t * the 'gameId' is the gameRoom ID. \r\n\t */\r\n\tconst { gameid } = useParams();\r\n\tJoinGameRoom(gameid, props.userName, props.isHost);\r\n\r\n\treturn <div>\r\n\t\t<h1 style = {{textAlign: \"center\"}}>Rock, paper, scissors</h1>\r\n\t</div>\r\n}\r\n\r\nexport default JoinGame;\r\n","import Cookies from 'universal-cookie';\r\nconst cookies = new Cookies();\r\nexport {cookies};\r\n","import React from 'react';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './game.css';\r\nimport axios from 'axios';\r\nimport { cookies } from '../cookie-manager';\r\n\r\nconst socket = require('../connections/socket').socket;\r\n\r\nconst port = process.env.PORT || 8000;\r\nconst url = process.env.URL || `localhost:${port}`;\r\nconst hubUrl = 'https://game-nexus.herokuapp.com/';\r\n//const url = 'https://game-nexus-rps.herokuapp.com';\r\n\r\n\r\nclass Game extends React.Component {\r\n\tstate = {\r\n\t\thost: this.props.isHost,\r\n\r\n\t\tchoiceHost: -1,\r\n\t\tchoiceGuest: -1,\r\n\r\n\t\tscoreHost: 0,\r\n\t\tscoreGuest: 0,\r\n\t\t\r\n\t\twinner: 'nobody',\r\n\t\t\r\n\t\tendOfGame: false\r\n\t\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t\r\n\t\tfunction setWinner() {\r\n\t\tconsole.log(\"MAMY TO\");\r\n\t\talert('winner: ' + this.state.winner);\r\n\t\tif(this.state.scoreGuest == 3) { // FIXME: this.scoreGuest not defined -> this.state.scoreGuest\r\n\t\tlet username = cookies.get('username');\r\n            if (username) {\r\n                axios.post(hubUrl + 'api/v1/stats', {\r\n                    game: 'rps',\r\n                    username: username,\r\n                    result: this.stats.isHost ? 1 : 0\r\n                });\r\n                cookies.get('username', { path: '/' });\r\n            }\r\n\t\t\tconsole.log(\"WESZLO GUEST\");\r\n\t\t\twindow.location.href = \"/guestWin.html\"; // FIXME: use React Redirect instead\r\n\t\t} else if(this.state.scoreHost == 3) {\r\n\t\t\tlet username = cookies.get('username');\r\n            if (username) {\r\n                axios.post(hubUrl + 'api/v1/stats', {\r\n                    game: 'rps',\r\n                    username: username,\r\n                    result: this.stats.isHost ? 1 : 0\r\n                });\r\n                cookies.get('username', { path: '/' });\r\n            }\r\n\t\t\tconsole.log(\"WESZLO HOST\");\r\n\t\t\twindow.location.href = \"/hostWin.html\";\r\n\t\t\t\r\n\t\t}\r\n\t\tthis.setState({ // FIXME: set state variable to represent that the game is finished, so that render() can redirect the player to end-game screen\r\n\t\t\twinner: 'nobody',\r\n\t\t\tchoiceGuest: -1, \r\n\t\t\tchoiceHost: -1\r\n\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tconsole.log('props:', this.props);\r\n\t\tconsole.log(this.state);\r\n\t\t\tthis.setState({\r\n\t\t\t\tisHost: this.props.isHost\r\n\t\t\t})\r\n\r\n\t\tsocket.on(\"hostMove\", choice => {\r\n\t\t\tconsole.log(\"hostMoveEvent\", choice);\r\n\t\t\tconsole.log(this.state.isHost);\r\n\t\t\tif(!this.state.isHost) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tchoiceHost: choice\r\n\t\t\t})\r\n\t\t\t}\r\n\t\t\tif(this.state.choiceGuest != -1 && this.state.choiceHost != -1) {\r\n\t\t\t\tif(this.state.choiceGuest == this.state.choiceHost) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\twinner: 'draw'\r\n\t\t\t\t\t})\r\n\t\t\t\t\tconsole.log(\"sc: \" + this.state.scoreGuest);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\telse if(this.state.choiceGuest == 1 && this.state.choiceHost == 0) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\twinner: 'Guest'\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tscoreGuest: (this.state.scoreGuest + 1)\r\n\t\t\t\t\t})\r\n\t\t\t\t\tconsole.log(\"sc: \" + this.state.scoreGuest);\r\n\t\t\t\t}\r\n\t\t\t\telse if(this.state.choiceGuest == 2 && this.state.choiceHost == 1) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\twinner: 'Guest'\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tscoreGuest: (this.state.scoreGuest + 1)\r\n\t\t\t\t\t})\r\n\t\t\t\t\tconsole.log(\"sc: \" + this.state.scoreGuest);\r\n\t\t\t\t}\r\n\t\t\t\telse if(this.state.choiceGuest == 0 && this.state.choiceHost == 2) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\twinner: 'Guest'\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tscoreGuest: (this.state.scoreGuest + 1)\r\n\t\t\t\t\t})\r\n\t\t\t\t\tconsole.log(\"sc: \" + this.state.scoreGuest);\r\n\t\t\t\t}\r\n\t\t\t\telse if(this.state.choiceGuest == 0 && this.state.choiceHost == 1) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\twinner: 'Host'\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tscoreHost: (this.state.scoreHost + 1)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\telse if(this.state.choiceGuest == 1 && this.state.choiceHost == 2) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\twinner: 'Host'\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tscoreHost: (this.state.scoreHost + 1)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\telse if(this.state.choiceGuest == 2 && this.state.choiceHost == 0) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\twinner: 'Host'\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tscoreHost: (this.state.scoreHost + 1)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tif(this.state.host) {\r\n\t\t\t\t\tif(this.state.winner == 'draw') {\r\n\t\t\t\t\t\twindow.alert(\"Draw\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(this.state.winner == 'Host') {\r\n\t\t\t\t\t\twindow.alert(\"You win\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\twindow.alert(\"You lose\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}  \r\n\t\t\t\telse {\r\n\t\t\t\t\tif(this.state.winner == 'draw') {\r\n\t\t\t\t\t\twindow.alert(\"Draw\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(this.state.winner == 'Host') {\r\n\t\t\t\t\t\twindow.alert(\"You lose\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\twindow.alert(\"You win\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(this.state.scoreHost)\r\n\t\t\t\tif(this.state.scoreHost == 3) {\r\n\t\t\t\t\tconsole.log(\"koniec!!!\");\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tendOfGame: true\r\n\t\t\t\t\t})\r\n\t\t\t\t\tsetWinner();\r\n\t\t\t\t\t//tutaj dodac do rankimgu i przejscie moze jakies.\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(this.state.scoreGuest);\r\n\t\t\t\tif(this.state.scoreGuest == 3) {\r\n\t\t\t\t\tconsole.log(\"koniec!!!\");\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tendOfGame: true\r\n\t\t\t\t\t})\r\n\t\t\t\t\tsetWinner();\r\n\t\t\t\t\t//tutaj dodac do rankimgu i przejscie moze jakies.\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\t\twinner: 'nobody',\r\n\t\t\t\t\t\tchoiceGuest: -1, \r\n\t\t\t\t\t\tchoiceHost: -1\r\n\t\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\t\r\n\r\n\t\tsocket.on(\"guestMove\", choice => {\r\n\t\t\tconsole.log(\"guestMoveEvent\", choice);\r\n\t\t\tconsole.log(this.state.isHost);\r\n\t\t\tif(this.state.isHost) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tchoiceGuest: choice\r\n\t\t\t})\r\n\t\t\t}\r\n\t\t\tif(this.state.choiceGuest != -1 && this.state.choiceHost != -1) {\r\n\t\t\t\tif(this.state.choiceGuest == this.state.choiceHost) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\twinner: 'draw'\r\n\t\t\t\t\t})\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\telse if(this.state.choiceGuest == 1 && this.state.choiceHost == 0) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\twinner: 'Guest'\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tscoreGuest: (this.state.scoreGuest + 1)\r\n\t\t\t\t\t})\r\n\t\t\t\t\tconsole.log(\"sc: \" + this.state.scoreGuest);\r\n\t\t\t\t}\r\n\t\t\t\telse if(this.state.choiceGuest == 2 && this.state.choiceHost == 1) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\twinner: 'Guest'\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tscoreGuest: (this.state.scoreGuest + 1)\r\n\t\t\t\t\t})\r\n\t\t\t\t\tconsole.log(\"sc: \" + this.state.scoreGuest);\r\n\t\t\t\t}\r\n\t\t\t\telse if(this.state.choiceGuest == 0 && this.state.choiceHost == 2) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\twinner: 'Guest'\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tscoreGuest: (this.state.scoreGuest + 1)\r\n\t\t\t\t\t})\r\n\t\t\t\t\tconsole.log(\"sc: \" + this.state.scoreGuest);\r\n\t\t\t\t}\r\n\t\t\t\telse if(this.state.choiceGuest == 0 && this.state.choiceHost == 1) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\twinner: 'Host'\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tscoreHost: (this.state.scoreHost + 1)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\telse if(this.state.choiceGuest == 1 && this.state.choiceHost == 2) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\twinner: 'Host'\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tscoreHost: (this.state.scorHost + 1)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\telse if(this.state.choiceGuest == 2 && this.state.choiceHost == 0) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\twinner: 'Host'\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tscoreHost: (this.state.scoreHost + 1)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tif(this.state.host) {\r\n\t\t\t\t\tif(this.state.winner == 'draw') {\r\n\t\t\t\t\t\twindow.alert(\"Draw\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(this.state.winner = 'Host') {\r\n\t\t\t\t\t\twindow.alert(\"You win\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\twindow.alert(\"You lose\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}  \r\n\t\t\t\telse {\r\n\t\t\t\t\tif(this.state.winner == 'draw') {\r\n\t\t\t\t\t\twindow.alert(\"Draw\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(this.state.winner = 'Host') {\r\n\t\t\t\t\t\twindow.alert(\"You lose\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\twindow.alert(\"You win\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(this.state.scoreHost)\r\n\t\t\t\tif(this.state.scoreHost == 3) {\r\n\t\t\t\t\tconsole.log(\"koniec!!!\");\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tendOfGame: true\r\n\t\t\t\t\t})\r\n\t\t\t\t\tsetWinner();\r\n\t\t\t\t\t//tutaj dodac do rankimgu i przejscie moze jakies.\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(this.state.scoreGuest);\r\n\t\t\t\tif(this.state.scoreGuest == 3) {\r\n\t\t\t\t\tconsole.log(\"koniec!!!\");\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tendOfGame: true\r\n\t\t\t\t\t})\r\n\t\t\t\t\tsetWinner();\r\n\t\t\t\t\t//tutaj dodac do rankimgu i przejscie moze jakies.\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\t\twinner: 'nobody',\r\n\t\t\t\t\t\tchoiceGuest: -1, \r\n\t\t\t\t\t\tchoiceHost: -1\r\n\t\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\t\r\n\t}\r\n\t\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t<React.Fragment>\r\n\t\t{\r\n\t\t\tthis.state.endOfGame ?\r\n\t\t\t\t<Redirect to = {'/end'}> \r\n\t\t\t\t</Redirect>\r\n\t\t\t:\r\n\t\t\t<div className=\"box\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t<button onClick={this.choose.bind(this, this.state.host, 0)}>rock</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t<button onClick={this.choose.bind(this, this.state.host, 1)}>paper</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t<button onClick={this.choose.bind(this, this.state.host, 2)}>scissors</button>\r\n\t\t\t\t</div>\r\n\t\t\t\tHost:\r\n\t\t\t\t<div>\r\n\t\t\t\t<h6>Score:</h6>\r\n\t\t\t\t<output>{this.state.scoreHost}</output>\r\n\t\t\t\t</div>\r\n\t\t\t\tGuest:\r\n\t\t\t\t<div>\r\n\t\t\t\t<h6>Score:</h6>\r\n\t\t\t\t<output>{this.state.scoreGuest}</output>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t}\r\n\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n\t\r\n\t\r\n\t/*\r\n\t * Passes information about player's choice to the game.\r\n\t * @param {boolean} isHost \r\n\t * @param {0|1|2} choice (0 - rock), (1 - paper), (2 - scissors).\r\n\t */\r\n\tchoose(isHost, choice) {\r\n\t\t\r\n\t\tif(this.state.endOfGame == true) {\r\n\t\t\tconsole.log(\"koniec\");\r\n\t\t}\r\n\t\telse if (isHost) {    \r\n\t\t\tthis.setState({\r\n\t\t\t\tchoiceHost: choice\r\n\t\t\t})\r\n\t\t\tsocket.emit(\"new host move\", {choice: choice, gameId: this.props.gameId});\r\n\t\t\tconsole.log(\"inH\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.setState({\r\n\t\t\t\tchoiceGuest: choice\r\n\t\t\t})\r\n\t\t\tsocket.emit(\"new guest move\", {choice: choice, gameId: this.props.gameId});\r\n\t\t\tconsole.log(\"inG\");\r\n\t\t}\r\n\t}\r\n\r\n}\t\r\n\r\nconst GameWrapper = (props) => {\r\n\t/**\r\n\t * player 1\r\n\t *      - socketId 1\r\n\t *      - socketId 2 ???\r\n\t * player 2\r\n\t *      - socketId 2\r\n\t *      - socketId 1\r\n\t */\r\n\r\n\r\n\r\n\t// const color = React.useContext(ColorContext);\r\n\tconst { gameid } = useParams();\r\n\tconst [opponentSocketId, setOpponentSocketId] = React.useState('');\r\n\tconst [opponentDidJoinTheGame, didJoinGame] = React.useState(false);\r\n\tconst [opponentUserName, setUserName] = React.useState('');\r\n\tconst [gameSessionDoesNotExist, doesntExist] = React.useState(false);\r\n\t\r\n\tconsole.log(props.isHost);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tsocket.on(\"playerJoinedRoom\", statusUpdate => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"A new player has joined the room! Username: \" +\r\n\t\t\t\tstatusUpdate.userName + \", Game id: \" + statusUpdate.gameId + \" Socket id: \" + statusUpdate.mySocketId\r\n\t\t\t);\r\n\t\t\tif (socket.id !== statusUpdate.mySocketId) {\r\n\t\t\t\tsetOpponentSocketId(statusUpdate.mySocketId);\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tsocket.on(\"status\", statusUpdate => {\r\n\t\t\tconsole.log(statusUpdate);\r\n\t\t\talert(statusUpdate);\r\n\t\t\tif (statusUpdate === 'This game session does not exist.' || statusUpdate === 'There are already 2 people playing in this room.') {\r\n\t\t\t\tdoesntExist(true);\r\n\t\t\t}\r\n\t\t})\r\n\t\t\r\n\t\t\r\n\r\n\t\tsocket.on('start game', (opponentUserName) => {\r\n\t\t\tconsole.log(\"START!\");\r\n\t\t\tif (opponentUserName !== props.myUserName) {\r\n\t\t\t\tsetUserName(opponentUserName);\r\n\t\t\t\tdidJoinGame(true);\r\n\t\t\t} else {\r\n\t\t\t\t// in chessGame, pass opponentUserName as a prop and label it as the enemy. \r\n\t\t\t\t// in chessGame, use reactContext to get your own userName\r\n\t\t\t\t// socket.emit('myUserName')\r\n\t\t\t\tsocket.emit('request username', gameid);\r\n\t\t\t}\r\n\t\t})\r\n\r\n\r\n\t\tsocket.on('give userName', (socketId) => {\r\n\t\t\tif (socket.id !== socketId) {\r\n\t\t\t\tconsole.log(\"give userName stage: \" + props.myUserName);\r\n\t\t\t\tsocket.emit('recieved userName', {userName: props.myUserName, gameId: gameid});\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tsocket.on('get Opponent UserName', (data) => {\r\n\t\t\tif (socket.id !== data.socketId) {\r\n\t\t\t\tsetUserName(data.userName);\r\n\t\t\t\tconsole.log('data.socketId: data.socketId');\r\n\t\t\t\tsetOpponentSocketId(data.socketId);\r\n\t\t\t\tdidJoinGame(true);\r\n\t\t\t}\r\n\t\t})\r\n\t}, []);\r\n\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t{opponentDidJoinTheGame ? (\r\n\t\t\t<div>\r\n\t\t\t<h4> Opponent: {opponentUserName} </h4>\r\n\t\t\t<div style={{ display: \"flex\" }}>\r\n\t\t\t\t<Game gameId={gameid} isHost={props.isHost}/>\r\n\t\t\t</div>\r\n\t\t\t<h4> You: {props.myUserName} </h4>\r\n\t\t\t</div>\r\n\t\t) : gameSessionDoesNotExist ? (\r\n\t\t\t<div>\r\n\t\t\t<h1 style={{ textAlign: \"center\", marginTop: \"200px\" }}> :( </h1>\r\n\t\t\t</div>\r\n\t\t) : (\r\n\t\t\t<div>\r\n\t\t\t<h1\r\n\t\t\t\tstyle={{\r\n\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\tmarginTop: String(window.innerHeight / 8) + \"px\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tHey <strong>{props.myUserName}</strong>, copy and paste the URL\r\n\t\t\t\tbelow to send to your friend:\r\n\t\t\t</h1>\r\n\t\t\t<textarea\r\n\t\t\t\tstyle={{ marginLeft: String((window.innerWidth / 2) - 290) + \"px\", marginTop: \"30px\", width: \"580px\", height: \"30px\"}}\r\n\t\t\t\tonFocus={(event) => {\r\n\t\t\t\t\tevent.target.select();\r\n\t\t\t\t}}\r\n\t\t\t\tvalue = {url + \"/game/\" + gameid}\r\n\t\t\t\ttype = \"text\"\r\n\t\t\t\treadOnly = {true}>\r\n\t\t\t\t</textarea>\r\n\t\t\t<br></br>\r\n\r\n\t\t\t<h1 style={{ textAlign: \"center\", marginTop: \"100px\" }}>\r\n\t\t\t\t{\" \"}\r\n\t\t\t\tWaiting for other opponent to join the game...{\" \"}\r\n\t\t\t</h1>\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default GameWrapper\r\n","import React from 'react';\r\nimport JoinGame from './join-game';\r\nimport Game from '../model/game';\r\nimport sha1 from 'sha1';\r\nimport { cookies } from '../cookie-manager';\r\n\r\nconst axios = require('axios');\r\n\r\n\r\nconst hubUrl = 'https://game-nexus.herokuapp.com/';\r\n\r\n\r\n/**\r\n * Onboard is where we create the game room.\r\n */\r\n\r\nclass JoinRoom extends React.Component {\r\n\tstate = {\r\n\t\tdidGetUserName: false,\r\n\t\tusername: '',\r\n\t\tinputEmail: '',\r\n\t\tinputPassword: '',\r\n\t\tinputText: ''\r\n\t}\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.email = React.createRef();\r\n\t\tthis.password = React.createRef();\r\n\r\n\t\tthis.textArea = React.createRef();\r\n\t}\r\n\r\n\ttypingEmail = () => {\r\n\t\t// grab the input text from the field from the DOM \r\n\t\tconst typedText = this.email.current.value\r\n\t\t\r\n\t\t// set the state with that text\r\n\t\tthis.setState({\r\n\t\t\tinputEmail: typedText\r\n\t\t})\r\n\t}\r\n\r\n\ttypingPassword = () => {\r\n\t\t// grab the input text from the field from the DOM \r\n\t\tconst typedText = this.password.current.value\r\n\t\t\r\n\t\t// set the state with that text\r\n\t\tthis.setState({\r\n\t\t\tinputPassword: typedText\r\n\t\t})\r\n\t}\r\n\r\n\ttypingUserName = () => {\r\n\t\t// grab the input text from the field from the DOM \r\n\t\tconst typedText = this.textArea.current.value\r\n\t\t\r\n\t\t// set the state with that text\r\n\t\tthis.setState({\r\n\t\t\tinputText: typedText\r\n\t\t})\r\n\t}\r\n\r\n    render() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t{\r\n\t\t\t\tthis.state.didGetUserName ? \r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<JoinGame userName = {this.state.username} isHost = {false}/>\r\n\t\t\t\t\t<Game myUserName = {this.state.username} isHost = {false}/>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t:\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1 style={{textAlign: \"center\", marginTop: String((window.innerHeight / 3)) + \"px\"}}>Log in:</h1>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tstyle={{marginLeft: String((window.innerWidth / 2) - 120) + \"px\", width: \"240px\", marginTop: \"62px\"}} \r\n\t\t\t\t\t\tref={this.email}\r\n\t\t\t\t\t\tonInput={this.typingEmail}></input>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tstyle={{marginLeft: String((window.innerWidth / 2) - 120) + \"px\", width: \"240px\", marginTop: \"62px\"}} \r\n\t\t\t\t\t\tref={this.password}\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tonInput={this.typingPassword}></input>\r\n\r\n\t\t\t\t\t<button className=\"btn btn-primary\" \r\n\t\t\t\t\t\tstyle = {{marginLeft: String((window.innerWidth / 2) - 60) + \"px\", width: \"120px\", marginTop: \"62px\"}} \r\n\t\t\t\t\t\tdisabled = {!(this.state.inputEmail.length > 0 && this.state.inputPassword.length > 0)} \r\n\t\t\t\t\t\tonClick = {() => {\r\n\t\t\t\t\t\t\tconsole.log('logging in');\r\n\t\t\t\t\t\t\taxios.post(hubUrl + 'api/v1/validate/', {\r\n\t\t\t\t\t\t\t\temail: this.state.inputEmail,\r\n\t\t\t\t\t\t\t\tpasswordHash: sha1(this.state.inputPassword)\r\n\t\t\t\t\t\t\t}).then(response => {\r\n\t\t\t\t\t\t\t\tconsole.log('got response:', response);\r\n\t\t\t\t\t\t\t\tcookies.set('username', response.data.username.username, { path: '/' });\r\n\t\t\t\t\t\t\t\t// TODO: remove this cookie right as the game ends\r\n\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\tusername: response.data.username.username,\r\n\t\t\t\t\t\t\t\t\tdidGetUserName: true\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}).catch(err => {\r\n\t\t\t\t\t\t\t\talert('Invalid credentials!');\r\n\t\t\t\t\t\t\t\tconsole.log('got error:', err.response);\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}}>Submit</button>\r\n\r\n\r\n\t\t\t\t\t<h1 style={{textAlign: \"center\", marginTop: String((window.innerHeight / 3)) + \"px\"}}>Play as guest:</h1>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tstyle={{marginLeft: String((window.innerWidth / 2) - 120) + \"px\", width: \"240px\", marginTop: \"62px\"}} \r\n\t\t\t\t\t\tref = {this.textArea}\r\n\t\t\t\t\t\tonInput = {this.typingUserName}></input>\r\n\r\n\t\t\t\t\t<button className=\"btn btn-primary\" \r\n\t\t\t\t\t\tstyle = {{marginLeft: String((window.innerWidth / 2) - 60) + \"px\", width: \"120px\", marginTop: \"62px\"}} \r\n\t\t\t\t\t\tdisabled = {!(this.state.inputText.length > 0)} \r\n\t\t\t\t\t\tonClick = {() => {\r\n\t\t\t\t\t\t\t// When the 'Submit' button gets pressed from the username screen,\r\n\t\t\t\t\t\t\t// We should send a request to the server to create a new room with\r\n\t\t\t\t\t\t\t// the uuid we generate here.\r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\tusername: this.state.inputText,\r\n\t\t\t\t\t\t\t\tdidGetUserName: true\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}}>Submit</button>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n    }\r\n}\r\n\r\nexport default JoinRoom;\r\n","import { createContext } from 'react'\r\n\r\nexport const ColorContext = createContext({\r\n    didRedirect: false, \r\n    playerDidRedirect: () => {}, \r\n    playerDidNotRedirect: () => {}\r\n});\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport uuid from 'uuid/v4';\r\nimport { ColorContext } from '../context/color-context';\r\nimport sha1 from 'sha1';\r\nimport { cookies } from '../cookie-manager';\r\n\r\nconst socket = require('../connections/socket').socket;\r\nconst axios = require('axios');\r\n\r\n\r\nconst hubUrl = 'https://game-nexus.herokuapp.com/';\r\n\r\n/**\r\n * Main is where we create the game room.\r\n */\r\n\r\nclass CreateNewGame extends React.Component {\r\n\tstate = {\r\n\t\tdidGetUserName: false,\r\n\t\tinputEmail: '',\r\n\t\tinputPassword: '',\r\n\t\tinputText: '',\r\n\t\tgameId: ''\r\n\t}\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.email = React.createRef();\r\n\t\tthis.password = React.createRef();\r\n\r\n\t\tthis.textArea = React.createRef();\r\n\t}\r\n\r\n\tsend = () => {\r\n\t\t/**\r\n\t\t * This method should create a new room in the '/' namespace\r\n\t\t * with a unique identifier. \r\n\t\t */\r\n\t\tconst newGameRoomId = uuid();\r\n\r\n\t\t// emit an event to the server to create a new room \r\n\t\tsocket.emit('createNewGame', newGameRoomId);\r\n\r\n\t\treturn newGameRoomId;\r\n\t}\r\n\r\n\ttypingEmail = () => {\r\n\t\t// grab the input text from the field from the DOM \r\n\t\tconst typedText = this.email.current.value\r\n\t\t\r\n\t\t// set the state with that text\r\n\t\tthis.setState({\r\n\t\t\tinputEmail: typedText\r\n\t\t})\r\n\t}\r\n\r\n\ttypingPassword = () => {\r\n\t\t// grab the input text from the field from the DOM \r\n\t\tconst typedText = this.password.current.value\r\n\t\t\r\n\t\t// set the state with that text\r\n\t\tthis.setState({\r\n\t\t\tinputPassword: typedText\r\n\t\t})\r\n\t}\r\n\r\n\ttypingUserName = () => {\r\n\t\t// grab the input text from the field from the DOM \r\n\t\tconst typedText = this.textArea.current.value;\r\n\t\t\r\n\t\t// set the state with that text\r\n\t\tthis.setState({\r\n\t\t\tinputText: typedText\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t{\r\n\t\t\t\tthis.state.didGetUserName ?\r\n\r\n\t\t\t\t<Redirect to = {\"/game/\" + this.state.gameId}/>\r\n\r\n\t\t\t:\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1 style={{textAlign: \"center\", marginTop: String((window.innerHeight / 3)) + \"px\"}}>Log in:</h1>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tstyle={{marginLeft: String((window.innerWidth / 2) - 120) + \"px\", width: \"240px\", marginTop: \"62px\"}} \r\n\t\t\t\t\t\tref = {this.email}\r\n\t\t\t\t\t\tonInput = {this.typingEmail}></input>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tstyle={{marginLeft: String((window.innerWidth / 2) - 120) + \"px\", width: \"240px\", marginTop: \"62px\"}} \r\n\t\t\t\t\t\tref = {this.password}\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tonInput = {this.typingPassword}></input>\r\n\r\n\t\t\t\t\t<button className=\"btn btn-primary\" \r\n\t\t\t\t\t\tstyle = {{marginLeft: String((window.innerWidth / 2) - 60) + \"px\", width: \"120px\", marginTop: \"62px\"}} \r\n\t\t\t\t\t\tdisabled = {!(this.state.inputEmail.length > 0 && this.state.inputPassword.length > 0)} \r\n\t\t\t\t\t\tonClick = {async () => {\r\n\t\t\t\t\t\t\tconsole.log('logging in');\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tconst response = await axios.post(hubUrl + 'api/v1/validate/', {\r\n\t\t\t\t\t\t\t\t\temail: this.state.inputEmail,\r\n\t\t\t\t\t\t\t\t\tpasswordHash: sha1(this.state.inputPassword)\r\n\t\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\t\tconsole.log('got response:', response.data.username.username);\r\n\t\t\t\t\t\t\t\tcookies.set('username', response.data.username.username, { path: '/' });\r\n\t\t\t\t\t\t\t\t// TODO: remove this cookie right as the game ends\r\n\t\t\t\t\t\t\t\tthis.props.didRedirect();\r\n\t\t\t\t\t\t\t\tthis.props.setUserName(response.data.username.username);\r\n\t\t\t\t\t\t\t\tlet roomId = this.send();\r\n\r\n\t\t\t\t\t\t\t\t// set the state of this component with the gameId so that we can\r\n\t\t\t\t\t\t\t\t// redirect the user to that URL later. \r\n\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\tdidGetUserName: true,\r\n\t\t\t\t\t\t\t\t\tgameId: roomId\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\t\talert('Invalid credentials!');\r\n\t\t\t\t\t\t\t\tconsole.log('got error:', err);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}>Submit</button>\r\n\r\n\t\t\t\t\t<h1 style={{textAlign: \"center\", marginTop: String((window.innerHeight / 3)) + \"px\"}}>Play as guest:</h1>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tstyle={{marginLeft: String((window.innerWidth / 2) - 120) + \"px\", width: \"240px\", marginTop: \"62px\"}}\r\n\t\t\t\t\t\tref = {this.textArea}\r\n\t\t\t\t\t\tonInput = {this.typingUserName}></input>\r\n\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"btn btn-primary\"\r\n\t\t\t\t\t\tstyle = {{marginLeft: String((window.innerWidth / 2) - 60) + \"px\", width: \"120px\", marginTop: \"62px\"}}\r\n\t\t\t\t\t\tdisabled = {!(this.state.inputText.length > 0)}\r\n\t\t\t\t\t\tonClick = {() => {\r\n\t\t\t\t\t\t\t// When the 'Submit' button gets pressed from the username screen,\r\n\t\t\t\t\t\t\t// We should send a request to the server to create a new room with\r\n\t\t\t\t\t\t\t// the uuid we generate here.\r\n\t\t\t\t\t\t\tthis.props.didRedirect();\r\n\t\t\t\t\t\t\tthis.props.setUserName(this.state.inputText);\r\n\t\t\t\t\t\t\tlet roomId = this.send();\r\n\r\n\t\t\t\t\t\t\t// set the state of this component with the gameId so that we can\r\n\t\t\t\t\t\t\t// redirect the user to that URL later. \r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\tdidGetUserName: true,\r\n\t\t\t\t\t\t\t\tgameId: roomId\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}}>Submit</button>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst Main = (props) => {\r\n    const color = React.useContext(ColorContext);\r\n\r\n    return <CreateNewGame didRedirect = {color.playerDidRedirect} setUserName = {props.setUserName}/>\r\n}\r\n\r\n\r\nexport default Main;\r\n","import React, { useEffect, useState, } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function SingleTicTacToe({userName})\r\n{\r\n\t\r\n\r\n\r\n    return (\r\n<html lang=\"en\">\r\n<head>\r\n\t<title>rock, paper, scissors</title>\r\n</head>\r\n<body>\r\n\r\n<script>\r\nmyStorage = window.sessionStorage;\r\n\r\n// Save data to sessionStorage\r\n\r\n</script>\r\n\r\n<div class=\"box\">\r\n\t<div class=\"titlebox\">\r\n\t\t<h1>Rock, Paper, Scissors</h1>\r\n\t\t<p> To play the game choose your weapon by clicking on one of the buttons below.</p>\r\n\t</div>\r\n\r\n\t<div class=\"row\">\r\n\t\t<div class=\"button\">\r\n\t\t\t<form action=\"rock\">\r\n\t\t\t\t<input type=\"image\" src=\"../img/rock.png\"/>\r\n\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\tRock\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"button\">\r\n\t\t\t<form action=\"paper\">\r\n\t\t\t\t<input type=\"image\" src=\"../img/paper.png\"/>\r\n\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\tPaper\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"button\">\r\n\t\t\t<form action=\"scissors\" >\r\n\t\t\t\t<input type=\"image\" src=\"../img/scissors.png\"/> <br />\r\n\t\t\t\t<div class=\"desc\">\r\n\t\t\t\t\tScissors\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n</body>\r\n</html>\r\n    )\r\n}","import React, { useEffect, useState, } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nfunction getR() {\r\n\tconsole.log(\"musi smigac\");\r\n\treturn Math.floor(Math.random() * (2 + 1));\r\n}\r\n\r\n\r\nvar comp = getR();\r\nconsole.log(comp);\r\nvar computerChoose = \"rock\";\r\nvar out = \"It's a draw!\";\r\n\r\nfunction getRandomIntInclusive() {\r\n\tconsole.log(\"SZK\" + comp);\r\n\tif(comp == 0) {\r\n\tcomputerChoose = \"paper\";\r\n}\r\nelse if(comp == 2) {\r\n\tcomputerChoose = \"scissors\";\r\n}\r\n\r\n\r\nif(comp == 0) {\r\n    out = \"You lose!\";\r\n}\r\nelse if(comp == 2) {\r\n    out = \"You win!\";\r\n\r\n}\r\n  return comp;\r\n}\r\n\r\ncomp = getRandomIntInclusive();\r\n\r\nexport default function SingleTicTacToe({userName})\r\n{\r\n\t\r\n\r\n\r\n    return (\r\n<html lang=\"en\">\r\n<head>\r\n    <title>rock, paper, scissors</title>\r\n</head>\r\n<body>\r\n// Get saved data from sessionStorage\r\n\r\n\r\n\r\n<div class=\"box\">\r\n    <div class=\"titlebox\">\r\n        <h1>Results:</h1>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"field\">\r\n            <div class=\"desc\">\r\n                <h4> Your choice:</h4>\r\n            </div>\r\n\r\n            <div class=\"button\">\r\n                <input type=\"image\" src=\"../img/rock.png\"/>\r\n                <div class=\"desc\">\r\n                    <h3>rock</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"field2\">\r\n            <div class=\"desc\">\r\n                <h1>\r\n\t\t\t\t\t{out}\r\n                </h1>\r\n            </div>\r\n\r\n            <div class=\"button\">\r\n                <form action=\"/single\">\r\n                    <input type=\"submit\" value=\"Play again\"/>\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"field\">\r\n            <div class=\"desc\">\r\n                <h4> Computer's choice:</h4>\r\n            </div>\r\n\r\n            <div class=\"button\">\r\n                <div class=\"desc\">\r\n                    <h3>\r\n\t\t\t\t\t{computerChoose}\r\n                    </h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n</body>\r\n</html>\r\n    )\r\n}","import React, { useEffect, useState, } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nfunction getR() {\r\n\tconsole.log(\"musi smigac\");\r\n\treturn Math.floor(Math.random() * (2 + 1));\r\n}\r\n\r\n\r\nvar comp = getR();\r\nconsole.log(comp);\r\nvar computerChoose = \"rock\";\r\nvar out = \"You lose!\";\r\n\r\nfunction getRandomIntInclusive() {\r\n\tconsole.log(\"SZK\" + comp);\r\n\tif(comp == 0) {\r\n\tcomputerChoose = \"paper\";\r\n}\r\nelse if(comp == 2) {\r\n\tcomputerChoose = \"scissors\";\r\n}\r\n\r\n\r\nif(comp == 0) {\r\n    out = \"You win!\";\r\n}\r\nelse if(comp == 2) {\r\n    out = \"It's a draw!\";\r\n\r\n}\r\n  return comp;\r\n}\r\n\r\ncomp = getRandomIntInclusive();\r\n\r\nexport default function SingleTicTacToe({userName})\r\n{\r\n\t\r\n\r\n\r\n    return (\r\n<html lang=\"en\">\r\n<head>\r\n    <title>rock, paper, scissors</title>\r\n</head>\r\n<body>\r\n// Get saved data from sessionStorage\r\n\r\n\r\n\r\n<div class=\"box\">\r\n    <div class=\"titlebox\">\r\n        <h1>Results:</h1>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"field\">\r\n            <div class=\"desc\">\r\n                <h4> Your choice:</h4>\r\n            </div>\r\n\r\n            <div class=\"button\">\r\n                <input type=\"image\" src=\"../img/rock.png\"/>\r\n                <div class=\"desc\">\r\n                    <h3>scissors</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"field2\">\r\n            <div class=\"desc\">\r\n                <h1>\r\n\t\t\t\t\t{out}\r\n                </h1>\r\n            </div>\r\n\r\n            <div class=\"button\">\r\n                <form action=\"/single\">\r\n                    <input type=\"submit\" value=\"Play again\"/>\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"field\">\r\n            <div class=\"desc\">\r\n                <h4> Computer's choice:</h4>\r\n            </div>\r\n\r\n            <div class=\"button\">\r\n                <div class=\"desc\">\r\n                    <h3>\r\n\t\t\t\t\t{computerChoose}\r\n                    </h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n</body>\r\n</html>\r\n    )\r\n}","import React, { useEffect, useState, } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nfunction getR() {\r\n\tconsole.log(\"musi smigac\");\r\n\treturn Math.floor(Math.random() * (2 + 1));\r\n}\r\n\r\n\r\nvar comp = getR();\r\nconsole.log(comp);\r\nvar computerChoose = \"rock\";\r\nvar out = \"You win!\";\r\n\r\nfunction getRandomIntInclusive() {\r\n\tconsole.log(\"SZK\" + comp);\r\n\tif(comp == 0) {\r\n\tcomputerChoose = \"paper\";\r\n}\r\nelse if(comp == 2) {\r\n\tcomputerChoose = \"scissors\";\r\n}\r\n\r\n\r\nif(comp == 0) {\r\n    out = \"It's a draw!\";\r\n}\r\nelse if(comp == 2) {\r\n    out = \"You lose!\";\r\n\r\n}\r\n  return comp;\r\n}\r\n\r\ncomp = getRandomIntInclusive();\r\n\r\nexport default function SingleTicTacToe({userName})\r\n{\r\n\t\r\n\r\n\r\n    return (\r\n<html lang=\"en\">\r\n<head>\r\n    <title>rock, paper, scissors</title>\r\n</head>\r\n<body>\r\n// Get saved data from sessionStorage\r\n\r\n\r\n\r\n<div class=\"box\">\r\n    <div class=\"titlebox\">\r\n        <h1>Results:</h1>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"field\">\r\n            <div class=\"desc\">\r\n                <h4> Your choice:</h4>\r\n            </div>\r\n\r\n            <div class=\"button\">\r\n                <input type=\"image\" src=\"../img/rock.png\"/>\r\n                <div class=\"desc\">\r\n                    <h3>paper</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"field2\">\r\n            <div class=\"desc\">\r\n                <h1>\r\n\t\t\t\t\t{out}\r\n                </h1>\r\n            </div>\r\n\r\n            <div class=\"button\">\r\n                <form action=\"/single\">\r\n                    <input type=\"submit\" value=\"Play again\"/>\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"field\">\r\n            <div class=\"desc\">\r\n                <h4> Computer's choice:</h4>\r\n            </div>\r\n\r\n            <div class=\"button\">\r\n                <div class=\"desc\">\r\n                    <h3>\r\n\t\t\t\t\t{computerChoose}\r\n                    </h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n</body>\r\n</html>\r\n    )\r\n}","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\r\nimport JoinRoom from './sites/join-room'\r\nimport { ColorContext } from './context/color-context'\r\nimport Main from './sites/main'\r\nimport JoinGame from './sites/join-game'\r\nimport Game from './model/game'\r\nimport SingleRPS from './singleRPS/SingleRPS'\r\nimport Rock from './singleRPS/rock'\r\nimport Scissors from './singleRPS/scissors'\r\nimport Paper from './singleRPS/paper'\r\n\r\nconst hubUrl = 'https://game-nexus.herokuapp.com/';\r\n\r\n/*\r\n *  Frontend flow: \r\n * \r\n * 1. user first opens this app in the browser. \r\n * 2. a screen appears asking the user to send their friend their game URL to start the game.\r\n * 3. the user sends their friend their game URL\r\n * 4. the user clicks the 'start' button and waits for the other player to join. \r\n * 5. As soon as the other player joins, the game starts. \r\n * \r\n * \r\n * Other player flow:\r\n * 1. user gets the link sent by their friend\r\n * 2. user clicks on the link and it redirects to their game. If the 'host' has not yet \r\n *    clicked the 'start' button yet, the user will wait for when the host clicks the start button.  \r\n *    If the host decides to leave before they click on the \"start\" button, the user will be notified\r\n *    that the host has ended the session. \r\n * 3. Once the host clicks the start button or the start button was already clicked on\r\n *    before, that's when the game starts. \r\n * Onboarding screen =====> Game start. \r\n * \r\n * Every time a user opens our site from the '/' path, a new game instance is automatically created\r\n * on the back-end. We should generate the uuid on the frontend, send the request with the uuid\r\n * as a part of the body of the request. If any player leaves, then the other player wins automatically.  \r\n * \r\n */\r\n\r\n\r\nfunction App() {\r\n\tconst [didRedirect, setDidRedirect] = React.useState(false);\r\n\r\n\tconst playerDidRedirect = React.useCallback(() => {\r\n\t\tsetDidRedirect(true);\r\n\t}, []);\r\n\r\n\tconst playerDidNotRedirect = React.useCallback(() => {\r\n\t\tsetDidRedirect(false);\r\n\t}, []);\r\n\r\n\tconst [userName, setUserName] = React.useState('');\r\n\r\n\treturn (\r\n\t<ColorContext.Provider value = {{didRedirect: didRedirect, playerDidRedirect: playerDidRedirect, playerDidNotRedirect: playerDidNotRedirect}}>\r\n\t\t<Router>\r\n\t\t<Switch>\r\n\t\t\t<Route path = \"/single\" exact>\r\n\t\t\t\t<SingleRPS\r\n\t\t\t\t userName = {userName}\r\n\t\t\t\t>\r\n\t\t\t\t</SingleRPS>\r\n\t\t\t</Route>\r\n\t\t\t<Route path = \"/rock\" exact>\r\n\t\t\t\t<Rock\r\n\t\t\t\t userName = {userName}\r\n\t\t\t\t>\r\n\t\t\t\t</Rock>\r\n\t\t\t</Route>\r\n\t\t\t<Route path = \"/paper\" exact>\r\n\t\t\t\t<Paper\r\n\t\t\t\t userName = {userName}\r\n\t\t\t\t>\r\n\t\t\t\t</Paper>\r\n\t\t\t</Route>\r\n\t\t\t<Route path = \"/scissors\" exact>\r\n\t\t\t\t<Scissors\r\n\t\t\t\t userName = {userName}\r\n\t\t\t\t>\r\n\t\t\t\t</Scissors>\r\n\t\t\t</Route>\r\n\t\t\t<Route path = \"/\" exact>\r\n\t\t\t\t<Main setUserName = {setUserName}/>\r\n\t\t\t</Route>\r\n\t\t\t<Route path = \"/game/:gameid\" exact>\r\n\t\t\t\t{didRedirect ? \r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<JoinGame userName = {userName} isHost = {true} />\r\n\t\t\t\t\t<Game myUserName = {userName} isHost = {true} />\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t\t:\r\n\t\t\t\t<JoinRoom />}\r\n\t\t\t</Route>\r\n\t\t\t<Route path = \"/end\" exact>\r\n\t\t\t\t<div>Thanks for playing rock-paper-scissors</div>\r\n\t\t\t\t<a href={hubUrl}>Back to hub</a>\r\n\t\t\t</Route>\r\n\t\t\t<Redirect to = \"/\" />\r\n\t\t</Switch>\r\n\t\t</Router>\r\n\t</ColorContext.Provider>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import io from 'socket.io-client';\r\n\r\nconst port = process.env.PORT || 8000;\r\nconst url = process.env.URL || `localhost:${port}`;\r\n// const url = 'https://game-nexus-rps.herokuapp.com';\r\n\r\nconst socket = io(url);\r\n\r\nlet mySocketId;\r\n\r\nsocket.on('createNewGame', status => {\r\n\tconsole.log(\"A new game has been created! Username: \" + status.userName + \", Game id: \" + status.gameId + \" Socket id: \" + status.mySocketId);\r\n\tmySocketId = status.mySocketId;\r\n})\r\n\r\nexport {\r\n\tsocket,\r\n\tmySocketId\r\n};\r\n"],"sourceRoot":""}