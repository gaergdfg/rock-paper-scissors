{"version":3,"sources":["sites/join-game.js","cookie-manager.js","model/game.js","sites/join-room.js","context/color-context.js","sites/main.js","singleRPS/SingleRPS.js","singleRPS/rock.js","singleRPS/scissors.js","singleRPS/paper.js","App.js","reportWebVitals.js","index.js","connections/socket.js"],"names":["socket","require","JoinGame","props","gameid","userName","isHost","idData","gameId","emit","JoinGameRoom","useParams","style","textAlign","cookies","Cookies","hubUrl","Game","state","host","choiceHost","choiceGuest","scoreHost","scoreGuest","winner","endOfGame","this","setState","on","choice","setWinner","window","alert","username","get","axios","post","game","result","remove","Fragment","to","className","onClick","choose","bind","getWinner","getOwnChoice","getOpponentChoice","endOfGam","React","Component","GameWrapper","useState","setOpponentSocketId","opponentDidJoinTheGame","didJoinGame","opponentUserName","setUserName","gameSessionDoesNotExist","doesntExist","useEffect","statusUpdate","id","mySocketId","myUserName","socketId","data","display","marginTop","String","innerHeight","marginLeft","innerWidth","width","height","onFocus","event","target","select","value","url","type","readOnly","JoinRoom","didGetUserName","inputEmail","inputPassword","inputText","typingEmail","typedText","email","current","typingPassword","password","typingUserName","textArea","createRef","ref","onInput","disabled","length","passwordHash","sha1","then","response","set","path","catch","err","console","log","ColorContext","createContext","didRedirect","playerDidRedirect","playerDidNotRedirect","CreateNewGame","send","newGameRoomId","uuid","a","roomId","Main","color","useContext","SingleTicTacToe","lang","class","action","src","comp","Math","floor","random","computerChoose","out","App","setDidRedirect","useCallback","Provider","exact","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","io","status"],"mappings":"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","file":"static/js/main.3caa0dd6.chunk.js","sourcesContent":["import React from 'react'\nimport { useParams } from 'react-router-dom'\n\nconst socket  = require('../connections/socket').socket;\n\n/**\n * 'Join game' is where we actually join the game room. \n */\n\n\nconst JoinGameRoom = (gameid, userName, isHost) => {\n\t/**\n\t * For this browser instance, we want \n\t * to join it to a gameRoom. For now\n\t * assume that the game room exists \n\t * on the backend. \n\t *  \n\t * \n\t * TODO: handle the case when the game room doesn't exist. \n\t */\n\tconst idData = {\n\t\tgameId : gameid,\n\t\tuserName : userName,\n\t\tisHost: isHost\n\t};\n\tsocket.emit(\"playerJoinGame\", idData);\n}\n\n\nconst JoinGame = (props) => {\n\t/**\n\t * Extract the 'gameId' from the URL. \n\t * the 'gameId' is the gameRoom ID. \n\t */\n\tconst { gameid } = useParams();\n\tJoinGameRoom(gameid, props.userName, props.isHost);\n\n\treturn <div>\n\t\t<h1 style = {{textAlign: \"center\"}}>Rock, paper, scissors</h1>\n\t</div>\n}\n\nexport default JoinGame;\n","import Cookies from 'universal-cookie';\nconst cookies = new Cookies();\nexport {cookies};\n","import React from 'react';\nimport {Redirect, useParams} from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\nimport './game.css';\nimport axios from 'axios';\nimport { cookies } from '../cookie-manager';\n\nconst socket = require('../connections/socket').socket;\n\n// const port = process.env.PORT || 8000;\n// const url = process.env.URL || `localhost:${port}`;\nconst url = 'https://game-nexus-rps.herokuapp.com';\nconst hubUrl = 'https://game-nexus.herokuapp.com/';\n\n\nclass Game extends React.Component {\n\tstate = {\n\t\thost: this.props.isHost,\n\n\t\tchoiceHost: -1,\n\t\tchoiceGuest: -1,\n\n\t\tscoreHost: 0,\n\t\tscoreGuest: 0,\n\t\t\n\t\twinner: 'nobody',\n\t\t\n\t\tendOfGame: false\n\t\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.setState({\n\t\t\tisHost: this.props.isHost\n\t\t})\n\n\t\tsocket.on(\"hostMove\", choice => {\n\t\t\tif(!this.state.isHost) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tchoiceHost: choice\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tif(this.state.choiceGuest != -1 && this.state.choiceHost != -1) {\n\t\t\t\tif(this.state.choiceGuest == this.state.choiceHost) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\twinner: 'draw'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse if(this.state.choiceGuest == 1 && this.state.choiceHost == 0) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\twinner: 'Guest'\n\t\t\t\t\t})\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tscoreGuest: (this.state.scoreGuest + 1)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse if(this.state.choiceGuest == 2 && this.state.choiceHost == 1) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\twinner: 'Guest'\n\t\t\t\t\t})\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tscoreGuest: (this.state.scoreGuest + 1)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse if(this.state.choiceGuest == 0 && this.state.choiceHost == 2) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\twinner: 'Guest'\n\t\t\t\t\t})\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tscoreGuest: (this.state.scoreGuest + 1)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse if(this.state.choiceGuest == 0 && this.state.choiceHost == 1) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\twinner: 'Host'\n\t\t\t\t\t})\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tscoreHost: (this.state.scoreHost + 1)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse if(this.state.choiceGuest == 1 && this.state.choiceHost == 2) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\twinner: 'Host'\n\t\t\t\t\t})\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tscoreHost: (this.state.scoreHost + 1)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse if(this.state.choiceGuest == 2 && this.state.choiceHost == 0) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\twinner: 'Host'\n\t\t\t\t\t})\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tscoreHost: (this.state.scoreHost + 1)\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif(this.state.scoreHost == 3) {\n\t\t\t\t\tthis.setWinner();\n\t\t\t\t\t//tutaj dodac do rankimgu i przejscie moze jakies.\n\t\t\t\t}\n\t\t\t\tif(this.state.scoreGuest == 3) {\n\t\t\t\t\tthis.setWinner();\n\t\t\t\t\t//tutaj dodac do rankimgu i przejscie moze jakies.\n\t\t\t\t}\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tchoiceGuest: -1, \n\t\t\t\t\tchoiceHost: -1\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t\t\n\n\t\tsocket.on(\"guestMove\", choice => {\n\t\t\tif(this.state.isHost) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tchoiceGuest: choice\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tif(this.state.choiceGuest != -1 && this.state.choiceHost != -1) {\n\t\t\t\tif(this.state.choiceGuest == this.state.choiceHost) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\twinner: 'draw'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse if(this.state.choiceGuest == 1 && this.state.choiceHost == 0) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\twinner: 'Guest'\n\t\t\t\t\t})\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tscoreGuest: (this.state.scoreGuest + 1)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse if(this.state.choiceGuest == 2 && this.state.choiceHost == 1) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\twinner: 'Guest'\n\t\t\t\t\t})\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tscoreGuest: (this.state.scoreGuest + 1)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse if(this.state.choiceGuest == 0 && this.state.choiceHost == 2) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\twinner: 'Guest'\n\t\t\t\t\t})\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tscoreGuest: (this.state.scoreGuest + 1)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse if(this.state.choiceGuest == 0 && this.state.choiceHost == 1) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\twinner: 'Host'\n\t\t\t\t\t})\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tscoreHost: (this.state.scoreHost + 1)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse if(this.state.choiceGuest == 1 && this.state.choiceHost == 2) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\twinner: 'Host'\n\t\t\t\t\t})\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tscoreHost: (this.state.scoreHost + 1)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse if(this.state.choiceGuest == 2 && this.state.choiceHost == 0) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\twinner: 'Host'\n\t\t\t\t\t})\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tscoreHost: (this.state.scoreHost + 1)\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif(this.state.scoreHost == 3) {\n\t\t\t\t\tthis.setWinner();\n\t\t\t\t\t//tutaj dodac do rankimgu i przejscie moze jakies.\n\t\t\t\t}\n\t\t\t\tif(this.state.scoreGuest == 3) {\n\t\t\t\t\tthis.setWinner();\n\t\t\t\t\t//tutaj dodac do rankimgu i przejscie moze jakies.\n\t\t\t\t}\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tchoiceGuest: -1, \n\t\t\t\t\tchoiceHost: -1\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\n\tsetWinner() {\n\t\tthis.setState({\n\t\t\tchoiceGuest: -1, \n\t\t\tchoiceHost: -1\n\t\t});\n\n\t\tif(this.state.scoreGuest == 3) {\n\t\t\twindow.alert(!this.state.isHost ? 'You won!' : 'You lost!');\n\n\t\t\tlet username = cookies.get('username');\n\t\t\tif (username) {\n\t\t\t\taxios.post(hubUrl + 'api/v1/stats', {\n\t\t\t\t\tgame: 'rock-paper-scissors',\n\t\t\t\t\tusername: username,\n\t\t\t\t\tresult: !this.state.isHost ? 1 : 0\n\t\t\t\t});\n\t\t\t\tcookies.remove('username');\n\t\t\t}\n\t\t} else if(this.state.scoreHost == 3) {\n\t\t\twindow.alert(this.state.isHost ? 'You won!' : 'You lost!');\n\t\t\t\n\t\t\tlet username = cookies.get('username');\n\t\t\tif (username) {\n\t\t\t\taxios.post(hubUrl + 'api/v1/stats', {\n\t\t\t\t\tgame: 'rock-paper-scissors',\n\t\t\t\t\tusername: username,\n\t\t\t\t\tresult: this.state.isHost ? 1 : 0\n\t\t\t\t});\n\t\t\t\tcookies.remove('username');\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({\n\t\t\tendOfGame: true\n\t\t});\n\t}\n\n\tgetWinner() {\n\t\tif (this.state.winner == 'nobody')\n\t\t\treturn '-----';\n\n\t\tif (this.state.winner == 'draw')\n\t\t\treturn 'Nobody';\n\n\t\tif ((this.state.winner == 'Host' && this.state.isHost) || (this.state.winner == 'Guest' && !this.state.isHost))\n\t\t\treturn 'You';\n\t\t\n\t\treturn 'Opponent';\n\t}\n\n\tgetOwnChoice() {\n\t\tswitch (this.state.isHost ? this.state.choiceHost : this.state.choiceGuest) {\n\t\t\tcase 0:\n\t\t\t\treturn 'Rock';\n\t\t\tcase 1:\n\t\t\t\treturn 'Paper';\n\t\t\tcase 2:\n\t\t\t\treturn 'Scissors';\n\t\t\tdefault:\n\t\t\t\treturn '-----';\n\t\t}\n\t}\n\n\tgetOpponentChoice() {\n\t\tif ((this.state.isHost && this.state.choiceGuest != -1) || (!this.state.isHost && this.state.choiceHost != -1))\n\t\t\treturn 'Ready';\n\t\t\n\t\treturn 'Not ready';\n\t}\n\n\trender() {\n\t\treturn (\n\t\t<React.Fragment>\n\t\t{\n\t\t\tthis.state.endOfGame ?\n\t\t\t\t<Redirect to = {'/end'}> \n\t\t\t\t</Redirect>\n\t\t\t:\n\t\t\t<div className=\"box\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<button onClick={this.choose.bind(this, this.state.host, 0)}>rock</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<button onClick={this.choose.bind(this, this.state.host, 1)}>paper</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<button onClick={this.choose.bind(this, this.state.host, 2)}>scissors</button>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<h3>Score:</h3>\n\t\t\t\t\t<output>{this.state.scoreHost} : {this.state.scoreGuest}</output>\n\t\t\t\t\t<h3>Winner of the last round:</h3>\n\t\t\t\t\t<output>{this.getWinner()}</output>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<output>Your choice: {this.getOwnChoice()}</output><br></br>\n\t\t\t\t\t<output>Opponent's choice: {this.getOpponentChoice()}</output>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t}\n\t\t</React.Fragment>\n\t\t)\n\t}\n\n\n\t/*\n\t * Passes information about player's choice to the game.\n\t * @param {boolean} isHost \n\t * @param {0|1|2} choice (0 - rock), (1 - paper), (2 - scissors).\n\t */\n\tchoose(isHost, choice) {\n\t\tif(this.state.endOfGam)\n\t\t\treturn;\n\t\tif (isHost) {    \n\t\t\tthis.setState({\n\t\t\t\tchoiceHost: choice\n\t\t\t})\n\t\t\tsocket.emit(\"new host move\", {choice: choice, gameId: this.props.gameId});\n\t\t}\n\t\telse {\n\t\t\tthis.setState({\n\t\t\t\tchoiceGuest: choice\n\t\t\t})\n\t\t\tsocket.emit(\"new guest move\", {choice: choice, gameId: this.props.gameId});\n\t\t}\n\t}\n}\n\nconst GameWrapper = (props) => {\n\t/**\n\t * player 1\n\t *      - socketId 1\n\t *      - socketId 2 ???\n\t * player 2\n\t *      - socketId 2\n\t *      - socketId 1\n\t */\n\n\n\n\t// const color = React.useContext(ColorContext);\n\tconst { gameid } = useParams();\n\tconst [opponentSocketId, setOpponentSocketId] = React.useState('');\n\tconst [opponentDidJoinTheGame, didJoinGame] = React.useState(false);\n\tconst [opponentUserName, setUserName] = React.useState('');\n\tconst [gameSessionDoesNotExist, doesntExist] = React.useState(false);\n\n\tReact.useEffect(() => {\n\t\tsocket.on(\"playerJoinedRoom\", statusUpdate => {\n\t\t\tif (socket.id !== statusUpdate.mySocketId) {\n\t\t\t\tsetOpponentSocketId(statusUpdate.mySocketId);\n\t\t\t}\n\t\t})\n\n\t\tsocket.on(\"status\", statusUpdate => {\n\t\t\talert(statusUpdate);\n\t\t\tif (statusUpdate === 'This game session does not exist.' || statusUpdate === 'There are already 2 people playing in this room.') {\n\t\t\t\tdoesntExist(true);\n\t\t\t}\n\t\t})\n\t\t\n\t\t\n\n\t\tsocket.on('start game', (opponentUserName) => {\n\t\t\tif (opponentUserName !== props.myUserName) {\n\t\t\t\tsetUserName(opponentUserName);\n\t\t\t\tdidJoinGame(true);\n\t\t\t} else {\n\t\t\t\t// in chessGame, pass opponentUserName as a prop and label it as the enemy. \n\t\t\t\t// in chessGame, use reactContext to get your own userName\n\t\t\t\t// socket.emit('myUserName')\n\t\t\t\tsocket.emit('request username', gameid);\n\t\t\t}\n\t\t})\n\n\n\t\tsocket.on('give userName', (socketId) => {\n\t\t\tif (socket.id !== socketId) {\n\t\t\t\tsocket.emit('recieved userName', {userName: props.myUserName, gameId: gameid});\n\t\t\t}\n\t\t})\n\n\t\tsocket.on('get Opponent UserName', (data) => {\n\t\t\tif (socket.id !== data.socketId) {\n\t\t\t\tsetUserName(data.userName);\n\t\t\t\tsetOpponentSocketId(data.socketId);\n\t\t\t\tdidJoinGame(true);\n\t\t\t}\n\t\t})\n\t}, []);\n\n\n\treturn (\n\t\t<React.Fragment>\n\t\t{opponentDidJoinTheGame ? (\n\t\t\t<div>\n\t\t\t<h4> Opponent: {opponentUserName} </h4>\n\t\t\t<div style={{ display: \"flex\" }}>\n\t\t\t\t<Game gameId={gameid} isHost={props.isHost}/>\n\t\t\t</div>\n\t\t\t<h4> You: {props.myUserName} </h4>\n\t\t\t</div>\n\t\t) : gameSessionDoesNotExist ? (\n\t\t\t<div>\n\t\t\t<h1 style={{ textAlign: \"center\", marginTop: \"200px\" }}> :( </h1>\n\t\t\t</div>\n\t\t) : (\n\t\t\t<div>\n\t\t\t<h1\n\t\t\t\tstyle={{\n\t\t\t\ttextAlign: \"center\",\n\t\t\t\tmarginTop: String(window.innerHeight / 8) + \"px\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tHey <strong>{props.myUserName}</strong>, copy and paste the URL\n\t\t\t\tbelow to send to your friend:\n\t\t\t</h1>\n\t\t\t<textarea\n\t\t\t\tstyle={{ marginLeft: String((window.innerWidth / 2) - 290) + \"px\", marginTop: \"30px\", width: \"580px\", height: \"30px\"}}\n\t\t\t\tonFocus={(event) => {\n\t\t\t\t\tevent.target.select();\n\t\t\t\t}}\n\t\t\t\tvalue = {url + \"/game/\" + gameid}\n\t\t\t\ttype = \"text\"\n\t\t\t\treadOnly = {true}>\n\t\t\t\t</textarea>\n\t\t\t<br></br>\n\n\t\t\t<h1 style={{ textAlign: \"center\", marginTop: \"100px\" }}>\n\t\t\t\t{\" \"}\n\t\t\t\tWaiting for other opponent to join the game...{\" \"}\n\t\t\t</h1>\n\t\t\t</div>\n\t\t)}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default GameWrapper\n","import React from 'react';\nimport JoinGame from './join-game';\nimport Game from '../model/game';\nimport sha1 from 'sha1';\nimport { cookies } from '../cookie-manager';\n\nconst axios = require('axios');\n\n\nconst hubUrl = 'https://game-nexus.herokuapp.com/';\n\n\n/**\n * Onboard is where we create the game room.\n */\n\nclass JoinRoom extends React.Component {\n\tstate = {\n\t\tdidGetUserName: false,\n\t\tusername: '',\n\t\tinputEmail: '',\n\t\tinputPassword: '',\n\t\tinputText: ''\n\t}\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.email = React.createRef();\n\t\tthis.password = React.createRef();\n\n\t\tthis.textArea = React.createRef();\n\t}\n\n\ttypingEmail = () => {\n\t\t// grab the input text from the field from the DOM \n\t\tconst typedText = this.email.current.value\n\t\t\n\t\t// set the state with that text\n\t\tthis.setState({\n\t\t\tinputEmail: typedText\n\t\t})\n\t}\n\n\ttypingPassword = () => {\n\t\t// grab the input text from the field from the DOM \n\t\tconst typedText = this.password.current.value\n\t\t\n\t\t// set the state with that text\n\t\tthis.setState({\n\t\t\tinputPassword: typedText\n\t\t})\n\t}\n\n\ttypingUserName = () => {\n\t\t// grab the input text from the field from the DOM \n\t\tconst typedText = this.textArea.current.value\n\t\t\n\t\t// set the state with that text\n\t\tthis.setState({\n\t\t\tinputText: typedText\n\t\t})\n\t}\n\n    render() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t{\n\t\t\t\tthis.state.didGetUserName ? \n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<JoinGame userName = {this.state.username} isHost = {false}/>\n\t\t\t\t\t<Game myUserName = {this.state.username} isHost = {false}/>\n\t\t\t\t</React.Fragment>\n\t\t\t:\n\t\t\t\t<div>\n\t\t\t\t\t<h1 style={{textAlign: \"center\", marginTop: String((window.innerHeight / 3)) + \"px\"}}>Log in:</h1>\n\n\t\t\t\t\t<input\n\t\t\t\t\t\tstyle={{marginLeft: String((window.innerWidth / 2) - 120) + \"px\", width: \"240px\", marginTop: \"62px\"}} \n\t\t\t\t\t\tref={this.email}\n\t\t\t\t\t\tonInput={this.typingEmail}></input>\n\n\t\t\t\t\t<input\n\t\t\t\t\t\tstyle={{marginLeft: String((window.innerWidth / 2) - 120) + \"px\", width: \"240px\", marginTop: \"62px\"}} \n\t\t\t\t\t\tref={this.password}\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tonInput={this.typingPassword}></input>\n\n\t\t\t\t\t<button className=\"btn btn-primary\" \n\t\t\t\t\t\tstyle = {{marginLeft: String((window.innerWidth / 2) - 60) + \"px\", width: \"120px\", marginTop: \"62px\"}} \n\t\t\t\t\t\tdisabled = {!(this.state.inputEmail.length > 0 && this.state.inputPassword.length > 0)} \n\t\t\t\t\t\tonClick = {() => {\n\t\t\t\t\t\t\taxios.post(hubUrl + 'api/v1/validate/', {\n\t\t\t\t\t\t\t\temail: this.state.inputEmail,\n\t\t\t\t\t\t\t\tpasswordHash: sha1(this.state.inputPassword)\n\t\t\t\t\t\t\t}).then(response => {\n\t\t\t\t\t\t\t\tcookies.set('username', response.data.username.username, { path: '/' });\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tusername: response.data.username.username,\n\t\t\t\t\t\t\t\t\tdidGetUserName: true\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}).catch(err => {\n\t\t\t\t\t\t\t\talert('Invalid credentials!');\n\t\t\t\t\t\t\t\tconsole.log('got error:', err.response);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}}>Submit</button>\n\n\n\t\t\t\t\t<h1 style={{textAlign: \"center\", marginTop: String((window.innerHeight / 3)) + \"px\"}}>Play as guest:</h1>\n\n\t\t\t\t\t<input\n\t\t\t\t\t\tstyle={{marginLeft: String((window.innerWidth / 2) - 120) + \"px\", width: \"240px\", marginTop: \"62px\"}} \n\t\t\t\t\t\tref = {this.textArea}\n\t\t\t\t\t\tonInput = {this.typingUserName}></input>\n\n\t\t\t\t\t<button className=\"btn btn-primary\" \n\t\t\t\t\t\tstyle = {{marginLeft: String((window.innerWidth / 2) - 60) + \"px\", width: \"120px\", marginTop: \"62px\"}} \n\t\t\t\t\t\tdisabled = {!(this.state.inputText.length > 0)} \n\t\t\t\t\t\tonClick = {() => {\n\t\t\t\t\t\t\t// When the 'Submit' button gets pressed from the username screen,\n\t\t\t\t\t\t\t// We should send a request to the server to create a new room with\n\t\t\t\t\t\t\t// the uuid we generate here.\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tusername: this.state.inputText,\n\t\t\t\t\t\t\t\tdidGetUserName: true\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}}>Submit</button>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t</React.Fragment>\n\t\t);\n    }\n}\n\nexport default JoinRoom;\n","import { createContext } from 'react'\n\nexport const ColorContext = createContext({\n    didRedirect: false, \n    playerDidRedirect: () => {}, \n    playerDidNotRedirect: () => {}\n});\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport uuid from 'uuid/v4';\nimport { ColorContext } from '../context/color-context';\nimport sha1 from 'sha1';\nimport { cookies } from '../cookie-manager';\n\nconst socket = require('../connections/socket').socket;\nconst axios = require('axios');\n\n\nconst hubUrl = 'https://game-nexus.herokuapp.com/';\n\n/**\n * Main is where we create the game room.\n */\n\nclass CreateNewGame extends React.Component {\n\tstate = {\n\t\tdidGetUserName: false,\n\t\tinputEmail: '',\n\t\tinputPassword: '',\n\t\tinputText: '',\n\t\tgameId: ''\n\t}\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.email = React.createRef();\n\t\tthis.password = React.createRef();\n\n\t\tthis.textArea = React.createRef();\n\t}\n\n\tsend = () => {\n\t\t/**\n\t\t * This method should create a new room in the '/' namespace\n\t\t * with a unique identifier. \n\t\t */\n\t\tconst newGameRoomId = uuid();\n\n\t\t// emit an event to the server to create a new room \n\t\tsocket.emit('createNewGame', newGameRoomId);\n\n\t\treturn newGameRoomId;\n\t}\n\n\ttypingEmail = () => {\n\t\t// grab the input text from the field from the DOM \n\t\tconst typedText = this.email.current.value\n\t\t\n\t\t// set the state with that text\n\t\tthis.setState({\n\t\t\tinputEmail: typedText\n\t\t})\n\t}\n\n\ttypingPassword = () => {\n\t\t// grab the input text from the field from the DOM \n\t\tconst typedText = this.password.current.value\n\t\t\n\t\t// set the state with that text\n\t\tthis.setState({\n\t\t\tinputPassword: typedText\n\t\t})\n\t}\n\n\ttypingUserName = () => {\n\t\t// grab the input text from the field from the DOM \n\t\tconst typedText = this.textArea.current.value;\n\t\t\n\t\t// set the state with that text\n\t\tthis.setState({\n\t\t\tinputText: typedText\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t{\n\t\t\t\tthis.state.didGetUserName ?\n\n\t\t\t\t<Redirect to = {\"/game/\" + this.state.gameId}/>\n\n\t\t\t:\n\n\t\t\t\t<div>\n\t\t\t\t\t<h1 style={{textAlign: \"center\", marginTop: String((window.innerHeight / 3)) + \"px\"}}>Log in:</h1>\n\n\t\t\t\t\t<input\n\t\t\t\t\t\tstyle={{marginLeft: String((window.innerWidth / 2) - 120) + \"px\", width: \"240px\", marginTop: \"62px\"}} \n\t\t\t\t\t\tref = {this.email}\n\t\t\t\t\t\tonInput = {this.typingEmail}></input>\n\n\t\t\t\t\t<input\n\t\t\t\t\t\tstyle={{marginLeft: String((window.innerWidth / 2) - 120) + \"px\", width: \"240px\", marginTop: \"62px\"}} \n\t\t\t\t\t\tref = {this.password}\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tonInput = {this.typingPassword}></input>\n\n\t\t\t\t\t<button className=\"btn btn-primary\" \n\t\t\t\t\t\tstyle = {{marginLeft: String((window.innerWidth / 2) - 60) + \"px\", width: \"120px\", marginTop: \"62px\"}} \n\t\t\t\t\t\tdisabled = {!(this.state.inputEmail.length > 0 && this.state.inputPassword.length > 0)} \n\t\t\t\t\t\tonClick = {async () => {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tconst response = await axios.post(hubUrl + 'api/v1/validate/', {\n\t\t\t\t\t\t\t\t\temail: this.state.inputEmail,\n\t\t\t\t\t\t\t\t\tpasswordHash: sha1(this.state.inputPassword)\n\t\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t\tcookies.set('username', response.data.username.username, { path: '/' });\n\t\t\t\t\t\t\t\tthis.props.didRedirect();\n\t\t\t\t\t\t\t\tthis.props.setUserName(response.data.username.username);\n\t\t\t\t\t\t\t\tlet roomId = this.send();\n\n\t\t\t\t\t\t\t\t// set the state of this component with the gameId so that we can\n\t\t\t\t\t\t\t\t// redirect the user to that URL later. \n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tdidGetUserName: true,\n\t\t\t\t\t\t\t\t\tgameId: roomId\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\talert('Invalid credentials!');\n\t\t\t\t\t\t\t\tconsole.log('got error:', err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}>Submit</button>\n\n\t\t\t\t\t<h1 style={{textAlign: \"center\", marginTop: String((window.innerHeight / 3)) + \"px\"}}>Play as guest:</h1>\n\n\t\t\t\t\t<input\n\t\t\t\t\t\tstyle={{marginLeft: String((window.innerWidth / 2) - 120) + \"px\", width: \"240px\", marginTop: \"62px\"}}\n\t\t\t\t\t\tref = {this.textArea}\n\t\t\t\t\t\tonInput = {this.typingUserName}></input>\n\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\t\t\tstyle = {{marginLeft: String((window.innerWidth / 2) - 60) + \"px\", width: \"120px\", marginTop: \"62px\"}}\n\t\t\t\t\t\tdisabled = {!(this.state.inputText.length > 0)}\n\t\t\t\t\t\tonClick = {() => {\n\t\t\t\t\t\t\t// When the 'Submit' button gets pressed from the username screen,\n\t\t\t\t\t\t\t// We should send a request to the server to create a new room with\n\t\t\t\t\t\t\t// the uuid we generate here.\n\t\t\t\t\t\t\tthis.props.didRedirect();\n\t\t\t\t\t\t\tthis.props.setUserName(this.state.inputText);\n\t\t\t\t\t\t\tlet roomId = this.send();\n\n\t\t\t\t\t\t\t// set the state of this component with the gameId so that we can\n\t\t\t\t\t\t\t// redirect the user to that URL later. \n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tdidGetUserName: true,\n\t\t\t\t\t\t\t\tgameId: roomId\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}>Submit</button>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nconst Main = (props) => {\n    const color = React.useContext(ColorContext);\n\n    return <CreateNewGame didRedirect = {color.playerDidRedirect} setUserName = {props.setUserName}/>\n}\n\n\nexport default Main;\n","import React, { useEffect, useState, } from \"react\";\nimport { Redirect } from 'react-router-dom';\n\n\n\nexport default function SingleTicTacToe({userName})\n{\n\t\n\n\n    return (\n<html lang=\"en\">\n<head>\n\t<title>rock, paper, scissors</title>\n</head>\n<body>\n\n<script>\nmyStorage = window.sessionStorage;\n\n// Save data to sessionStorage\n\n</script>\n\n<div class=\"box\">\n\t<div class=\"titlebox\">\n\t\t<h1>Rock, Paper, Scissors</h1>\n\t\t<p> To play the game choose your weapon by clicking on one of the buttons below.</p>\n\t</div>\n\n\t<div class=\"row\">\n\t\t<div class=\"button\">\n\t\t\t<form action=\"rock\">\n\t\t\t\t<input type=\"image\" src=\"../img/rock.png\"/>\n\t\t\t\t<div class=\"desc\">\n\t\t\t\t\tRock\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\n\t\t<div class=\"button\">\n\t\t\t<form action=\"paper\">\n\t\t\t\t<input type=\"image\" src=\"../img/paper.png\"/>\n\t\t\t\t<div class=\"desc\">\n\t\t\t\t\tPaper\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\n\t\t<div class=\"button\">\n\t\t\t<form action=\"scissors\" >\n\t\t\t\t<input type=\"image\" src=\"../img/scissors.png\"/> <br />\n\t\t\t\t<div class=\"desc\">\n\t\t\t\t\tScissors\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t</div>\n</div>\n</body>\n</html>\n    )\n}","import React, { useEffect, useState, } from \"react\";\nimport { Redirect } from 'react-router-dom';\n\nfunction getR() {\n\treturn Math.floor(Math.random() * (2 + 1));\n}\n\n\nvar comp = getR();\nvar computerChoose = \"rock\";\nvar out = \"It's a draw!\";\n\nfunction getRandomIntInclusive() {\n\tif(comp == 0) {\n\tcomputerChoose = \"paper\";\n}\nelse if(comp == 2) {\n\tcomputerChoose = \"scissors\";\n}\n\n\nif(comp == 0) {\n    out = \"You lose!\";\n}\nelse if(comp == 2) {\n    out = \"You win!\";\n\n}\n  return comp;\n}\n\ncomp = getRandomIntInclusive();\n\nexport default function SingleTicTacToe({userName})\n{\n\t\n\n\n    return (\n<html lang=\"en\">\n<head>\n    <title>rock, paper, scissors</title>\n</head>\n<body>\n// Get saved data from sessionStorage\n\n\n\n<div class=\"box\">\n    <div class=\"titlebox\">\n        <h1>Results:</h1>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"field\">\n            <div class=\"desc\">\n                <h4> Your choice:</h4>\n            </div>\n\n            <div class=\"button\">\n                <input type=\"image\" src=\"../img/rock.png\"/>\n                <div class=\"desc\">\n                    <h3>rock</h3>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"field2\">\n            <div class=\"desc\">\n                <h1>\n\t\t\t\t\t{out}\n                </h1>\n            </div>\n\n            <div class=\"button\">\n                <form action=\"/single\">\n                    <input type=\"submit\" value=\"Play again\"/>\n                </form>\n            </div>\n        </div>\n\n\n        <div class=\"field\">\n            <div class=\"desc\">\n                <h4> Computer's choice:</h4>\n            </div>\n\n            <div class=\"button\">\n                <div class=\"desc\">\n                    <h3>\n\t\t\t\t\t{computerChoose}\n                    </h3>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n</body>\n</html>\n    )\n}","import React, { useEffect, useState, } from \"react\";\nimport { Redirect } from 'react-router-dom';\n\nfunction getR() {\n\treturn Math.floor(Math.random() * (2 + 1));\n}\n\n\nvar comp = getR();\nvar computerChoose = \"rock\";\nvar out = \"You lose!\";\n\nfunction getRandomIntInclusive() {\n\tif(comp == 0) {\n\tcomputerChoose = \"paper\";\n}\nelse if(comp == 2) {\n\tcomputerChoose = \"scissors\";\n}\n\n\nif(comp == 0) {\n    out = \"You win!\";\n}\nelse if(comp == 2) {\n    out = \"It's a draw!\";\n\n}\n  return comp;\n}\n\ncomp = getRandomIntInclusive();\n\nexport default function SingleTicTacToe({userName})\n{\n\t\n\n\n    return (\n<html lang=\"en\">\n<head>\n    <title>rock, paper, scissors</title>\n</head>\n<body>\n// Get saved data from sessionStorage\n\n\n\n<div class=\"box\">\n    <div class=\"titlebox\">\n        <h1>Results:</h1>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"field\">\n            <div class=\"desc\">\n                <h4> Your choice:</h4>\n            </div>\n\n            <div class=\"button\">\n                <input type=\"image\" src=\"../img/rock.png\"/>\n                <div class=\"desc\">\n                    <h3>scissors</h3>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"field2\">\n            <div class=\"desc\">\n                <h1>\n\t\t\t\t\t{out}\n                </h1>\n            </div>\n\n            <div class=\"button\">\n                <form action=\"/single\">\n                    <input type=\"submit\" value=\"Play again\"/>\n                </form>\n            </div>\n        </div>\n\n\n        <div class=\"field\">\n            <div class=\"desc\">\n                <h4> Computer's choice:</h4>\n            </div>\n\n            <div class=\"button\">\n                <div class=\"desc\">\n                    <h3>\n\t\t\t\t\t{computerChoose}\n                    </h3>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n</body>\n</html>\n    )\n}","import React, { useEffect, useState, } from \"react\";\nimport { Redirect } from 'react-router-dom';\n\nfunction getR() {\n\treturn Math.floor(Math.random() * (2 + 1));\n}\n\n\nvar comp = getR();\nvar computerChoose = \"rock\";\nvar out = \"You win!\";\n\nfunction getRandomIntInclusive() {\n\tif(comp == 0) {\n\tcomputerChoose = \"paper\";\n}\nelse if(comp == 2) {\n\tcomputerChoose = \"scissors\";\n}\n\n\nif(comp == 0) {\n    out = \"It's a draw!\";\n}\nelse if(comp == 2) {\n    out = \"You lose!\";\n\n}\n  return comp;\n}\n\ncomp = getRandomIntInclusive();\n\nexport default function SingleTicTacToe({userName})\n{\n\t\n\n\n    return (\n<html lang=\"en\">\n<head>\n    <title>rock, paper, scissors</title>\n</head>\n<body>\n// Get saved data from sessionStorage\n\n\n\n<div class=\"box\">\n    <div class=\"titlebox\">\n        <h1>Results:</h1>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"field\">\n            <div class=\"desc\">\n                <h4> Your choice:</h4>\n            </div>\n\n            <div class=\"button\">\n                <input type=\"image\" src=\"../img/rock.png\"/>\n                <div class=\"desc\">\n                    <h3>paper</h3>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"field2\">\n            <div class=\"desc\">\n                <h1>\n\t\t\t\t\t{out}\n                </h1>\n            </div>\n\n            <div class=\"button\">\n                <form action=\"/single\">\n                    <input type=\"submit\" value=\"Play again\"/>\n                </form>\n            </div>\n        </div>\n\n\n        <div class=\"field\">\n            <div class=\"desc\">\n                <h4> Computer's choice:</h4>\n            </div>\n\n            <div class=\"button\">\n                <div class=\"desc\">\n                    <h3>\n\t\t\t\t\t{computerChoose}\n                    </h3>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n</body>\n</html>\n    )\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport JoinRoom from './sites/join-room'\nimport { ColorContext } from './context/color-context'\nimport Main from './sites/main'\nimport JoinGame from './sites/join-game'\nimport Game from './model/game'\nimport SingleRPS from './singleRPS/SingleRPS'\nimport Rock from './singleRPS/rock'\nimport Scissors from './singleRPS/scissors'\nimport Paper from './singleRPS/paper'\n\nconst hubUrl = 'https://game-nexus.herokuapp.com/';\n\n/*\n *  Frontend flow: \n * \n * 1. user first opens this app in the browser. \n * 2. a screen appears asking the user to send their friend their game URL to start the game.\n * 3. the user sends their friend their game URL\n * 4. the user clicks the 'start' button and waits for the other player to join. \n * 5. As soon as the other player joins, the game starts. \n * \n * \n * Other player flow:\n * 1. user gets the link sent by their friend\n * 2. user clicks on the link and it redirects to their game. If the 'host' has not yet \n *    clicked the 'start' button yet, the user will wait for when the host clicks the start button.  \n *    If the host decides to leave before they click on the \"start\" button, the user will be notified\n *    that the host has ended the session. \n * 3. Once the host clicks the start button or the start button was already clicked on\n *    before, that's when the game starts. \n * Onboarding screen =====> Game start. \n * \n * Every time a user opens our site from the '/' path, a new game instance is automatically created\n * on the back-end. We should generate the uuid on the frontend, send the request with the uuid\n * as a part of the body of the request. If any player leaves, then the other player wins automatically.  \n * \n */\n\n\nfunction App() {\n\tconst [didRedirect, setDidRedirect] = React.useState(false);\n\n\tconst playerDidRedirect = React.useCallback(() => {\n\t\tsetDidRedirect(true);\n\t}, []);\n\n\tconst playerDidNotRedirect = React.useCallback(() => {\n\t\tsetDidRedirect(false);\n\t}, []);\n\n\tconst [userName, setUserName] = React.useState('');\n\n\treturn (\n\t<ColorContext.Provider value = {{didRedirect: didRedirect, playerDidRedirect: playerDidRedirect, playerDidNotRedirect: playerDidNotRedirect}}>\n\t\t<Router>\n\t\t<Switch>\n\t\t\t<Route path = \"/single\" exact>\n\t\t\t\t<SingleRPS\n\t\t\t\t userName = {userName}\n\t\t\t\t>\n\t\t\t\t</SingleRPS>\n\t\t\t</Route>\n\t\t\t<Route path = \"/rock\" exact>\n\t\t\t\t<Rock\n\t\t\t\t userName = {userName}\n\t\t\t\t>\n\t\t\t\t</Rock>\n\t\t\t</Route>\n\t\t\t<Route path = \"/paper\" exact>\n\t\t\t\t<Paper\n\t\t\t\t userName = {userName}\n\t\t\t\t>\n\t\t\t\t</Paper>\n\t\t\t</Route>\n\t\t\t<Route path = \"/scissors\" exact>\n\t\t\t\t<Scissors\n\t\t\t\t userName = {userName}\n\t\t\t\t>\n\t\t\t\t</Scissors>\n\t\t\t</Route>\n\t\t\t<Route path = \"/\" exact>\n\t\t\t\t<Main setUserName = {setUserName}/>\n\t\t\t</Route>\n\t\t\t<Route path = \"/game/:gameid\" exact>\n\t\t\t\t{didRedirect ? \n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<JoinGame userName = {userName} isHost = {true} />\n\t\t\t\t\t<Game myUserName = {userName} isHost = {true} />\n\t\t\t\t</React.Fragment>\n\t\t\t\t:\n\t\t\t\t<JoinRoom />}\n\t\t\t</Route>\n\t\t\t<Route path = \"/end\" exact>\n\t\t\t\t<div>Thanks for playing rock-paper-scissors</div>\n\t\t\t\t<a href={hubUrl}>Back to hub</a>\n\t\t\t</Route>\n\t\t\t<Redirect to = \"/\" />\n\t\t</Switch>\n\t\t</Router>\n\t</ColorContext.Provider>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import io from 'socket.io-client';\n\n// const port = process.env.PORT || 8000;\n// const url = process.env.URL || `localhost:${port}`;\nconst url = 'https://game-nexus-rps.herokuapp.com';\n\nconst socket = io(url);\n\nlet mySocketId;\n\nsocket.on('createNewGame', status => {\n\tconsole.log(\"A new game has been created! Username: \" + status.userName + \", Game id: \" + status.gameId + \" Socket id: \" + status.mySocketId);\n\tmySocketId = status.mySocketId;\n})\n\nexport {\n\tsocket,\n\tmySocketId\n};\n"],"sourceRoot":""}